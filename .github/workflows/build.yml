name: Windows Release

on:
  push:
    branches: [main, continuous-integration]
    tags: ['v*']
  pull_request:
    branches: [main, continuous-integration]

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 5.15.2
  ARTIFACT: calculator-build.zip

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Fetch all tags
        run: git fetch --all --tags -f
        working-directory: ${{ github.workspace }}

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          arch: win64_msvc2019_64
          dir: ${{ runner.temp }}
          modules: ""
          setup-python: false

      - name: Download JOM (Qt build tool)
        uses: suisei-cn/actions-download-file@v1
        with:
          url: http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\

      - name: Unzip JOM
        run: 7z x jom.zip -ojom
        working-directory: ${{ runner.temp }}

      - name: Create build directory
        run: mkdir ${{ runner.temp }}\build

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build Calculator app
        working-directory: ${{ runner.temp }}\build
        run: |
          qmake -r ${{ env.SOURCE_DIR }}\Calculator.pro
          ${{ runner.temp }}\jom\jom -j2

      - name: Deploy Qt dependencies
        run: |
          mkdir ${{ runner.temp }}\deploy
          copy ${{ runner.temp }}\build\release\Calculator.exe ${{ runner.temp }}\deploy\
          windeployqt --release --qmldir ${{ env.SOURCE_DIR }} ${{ runner.temp }}\deploy\Calculator.exe

      - name: Zip full deployment
        working-directory: ${{ runner.temp }}
        run: 7z a ${{ env.ARTIFACT }} .\deploy\*

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT }}
          path: ${{ runner.temp }}\${{ env.ARTIFACT }}
